package com.lee.oam.pojo;

import java.io.Serializable;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

public class OamDatabase implements Serializable {
    /**
     * 主键
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String id;

    /**
     * 应用app ID
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String appId;

    /**
     * 部署设备
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String deviceId;

    private String ipId;

    /**
     * 安装到设备上的时�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String installTime;

    /**
     * 安装人员
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String installUser;

    /**
     * 数据库类�?oracle mysql sqlserver
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String databaseType;
    /**
     * 使用类型 主机 备机
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String useType;
    private String useTypeTitle;
    /**
     * 服务器端安装包名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String softServer;

    /**
     * 客户器端安装包名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String softClient;

    /**
     * 数据库实例名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String sid;

    /**
     * 表空间数据名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String spaceData;

    /**
     * 表空间临时数据名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String spaceTemp;

    /**
     * 数据库端�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private Integer port;

    private String createTime;

    private String updateTime;

    private String createUser;

    private String updateUser;

    /**
     * 备注
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private String remark;

    
    private OamDevice dev;
    private OamApp app;
    private OamIp ip;
    private List<OamDatabaseUser> users;
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table oam_database
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    private static final long serialVersionUID = 1L;

    /**
     * 主键
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getId() {
        return id;
    }

    /**
     * 主键
     *
     * @param id java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setId(String id) {
        this.id = id == null ? null : id.trim();
    }

    /**
     * 应用app ID
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getAppId() {
        return appId;
    }

    /**
     * 应用app ID
     *
     * @param appId java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setAppId(String appId) {
        this.appId = appId == null ? null : appId.trim();
    }

    /**
     * 部署设备
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getDeviceId() {
        return deviceId;
    }

    /**
     * 部署设备
     *
     * @param deviceId java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId == null ? null : deviceId.trim();
    }

    public String getIpId() {
        return ipId;
    }

    public void setIpId(String ipId) {
        this.ipId = ipId == null ? null : ipId.trim();
    }

    /**
     * 安装到设备上的时�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getInstallTime() {
        return installTime;
    }

    /**
     * 安装到设备上的时�?
     *
     * @param installTime java.util.Date
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setInstallTime(String installTime) {
        this.installTime = StringUtils.isBlank(installTime) ? null :installTime;
    }

    /**
     * 安装人员
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getInstallUser() {
        return installUser;
    }

    /**
     * 安装人员
     *
     * @param installUser java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setInstallUser(String installUser) {
        this.installUser = installUser == null ? null : installUser.trim();
    }

    /**
     * 数据库类�?oracle mysql sqlserver
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getDatabaseType() {
        return databaseType;
    }

    /**
     * 数据库类�?oracle mysql sqlserver
     *
     * @param databaseType java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setDatabaseType(String databaseType) {
        this.databaseType = databaseType == null ? null : databaseType.trim();
    }

    /**
     * 使用类型 主机 备机
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getUseType() {
        return useType;
    }

    /**
     * 使用类型 主机 备机
     *
     * @param useType java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setUseType(String useType) {
        this.useType = useType == null ? null : useType.trim();
    }

    /**
     * 服务器端安装包名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getSoftServer() {
        return softServer;
    }

    /**
     * 服务器端安装包名�?
     *
     * @param softServer java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setSoftServer(String softServer) {
        this.softServer = softServer == null ? null : softServer.trim();
    }

    /**
     * 客户器端安装包名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getSoftClient() {
        return softClient;
    }

    /**
     * 客户器端安装包名�?
     *
     * @param softClient java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setSoftClient(String softClient) {
        this.softClient = softClient == null ? null : softClient.trim();
    }

    /**
     * 数据库实例名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getSid() {
        return sid;
    }

    /**
     * 数据库实例名�?
     *
     * @param sid java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setSid(String sid) {
        this.sid = sid == null ? null : sid.trim();
    }

    /**
     * 表空间数据名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getSpaceData() {
        return spaceData;
    }

    /**
     * 表空间数据名�?
     *
     * @param spaceData java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setSpaceData(String spaceData) {
        this.spaceData = spaceData == null ? null : spaceData.trim();
    }

    /**
     * 表空间临时数据名�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getSpaceTemp() {
        return spaceTemp;
    }

    /**
     * 表空间临时数据名�?
     *
     * @param spaceTemp java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setSpaceTemp(String spaceTemp) {
        this.spaceTemp = spaceTemp == null ? null : spaceTemp.trim();
    }

    /**
     * 数据库端�?
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public Integer getPort() {
        return port;
    }

    /**
     * 数据库端�?
     *
     * @param port java.lang.Integer
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setPort(Integer port) {
        this.port = port;
    }

    public String getCreateTime() {
        return createTime;
    }

    public void setCreateTime(String createTime) {
        this.createTime =StringUtils.isBlank(createTime) ? null : createTime;
    }

    public String getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(String updateTime) {
        this.updateTime = StringUtils.isBlank(updateTime) ? null : updateTime;
    }

    public String getCreateUser() {
        return createUser;
    }

    public void setCreateUser(String createUser) {
        this.createUser = createUser == null ? null : createUser.trim();
    }

    public String getUpdateUser() {
        return updateUser;
    }

    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser == null ? null : updateUser.trim();
    }

    /**
     * 备注
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public String getRemark() {
        return remark;
    }

    /**
     * 备注
     *
     * @param remark java.lang.String
     *
     * @mbg.generated 2017-03-02 11:32:28
     */
    public void setRemark(String remark) {
        this.remark = remark == null ? null : remark.trim();
    }

	public OamDevice getDev() {
		return dev;
	}

	public void setDev(OamDevice dev) {
		this.dev = dev;
	}

	public OamApp getApp() {
		return app;
	}

	public void setApp(OamApp app) {
		this.app = app;
	}

	public OamIp getIp() {
		return ip;
	}

	public void setIp(OamIp ip) {
		this.ip = ip;
	}

	public String getUseTypeTitle() {
		return useTypeTitle;
	}

	public void setUseTypeTitle(String useTypeTitle) {
		this.useTypeTitle = useTypeTitle;
	}
    

	public List<OamDatabaseUser> getUsers() {
		return users;
	}

	public void setUsers(List<OamDatabaseUser> users) {
		this.users = users;
	}
    
    
}